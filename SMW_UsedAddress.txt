;This txt file purpose is to make it so you can track both SMW original used address and your installed patches. Some patches may free up RAM (such as my center scroll patch), thus making it even easier
;to track.
;
;Since these javascript tools ignore comments (using semicolons ";"), you can copy this entire txt document (CTRL+A, then CTRL+C) and then paste it in the appropriate textarea and it will work.
;
;Old stuff before the massive update came, just ignore this:
;	You may be wondering how I get this info quickly. All I did is go to the RAM map, search for empty RAM, copy the table in text format (it will try to convert it into tab-seperated values via the browser),
;	paste it in notepad++, sort lines lexicographically ascending (Edit -> Line Operations), make edits (including using find-and-replace regex functions) so that it is in a format compatible with the HTML
;	JS tool, open the HTML JS tool, paste the text. The output then displays, and all gaps between each empty RAM data should be RAM addresses used by SMW (each region in the same gap is merged, by the way).
;	I then took that gap data containing used addresses, and paste it here.
;	
;	To convert to an appropriate format for the JS tool straight from the RAM map:
;		First, search for empty RAM on smwc's ram map.
;		Copy all the text in that table.
;		Paste it in notepad++
;		Remove the word “byte” or “bytes”:
;			Do this first
;				Find what: [bytes]
;				Replace with [] (nothing)
;				hit replace all
;			and then:
;				Find what: [1 byte]
;				Replace with [] (nothing)
;				hit replace all
;			If done in the wrong order, you'll have
;			leftover “s” in the way.
;		Remove spaces after the number of bytes:
;			Find what: [ \t]
;			Replace with [\t]
;			use regular expression
;			hit replace all
;		And then to rid out the description and type that potentially have characters
;		causing the JS tool to error out:
;			Find what: [^(?'AddrNumbBytes'\$[a-zA-Z0-9]+\t\d+\t)Empty\t.+$]
;			Replace with: [$+{AddrNumbBytes}]
;			hit replace all
;		Note that some leftover description is still present due to linebreaks in the description column.
;		To extract only the RAM and number of bytes, hit CTRL+F:
;			Find what: [^\$[a-zA-Z0-9]+\t\d+\t$]
;			Hit Find All in Current Document
;		And you now should have the correct format.
;		Open the HTML JS tool, paste it, and any gaps between each empty RAM should be used-RAM you can then copy
;		that table (again, turns it into tab-separated values), and now you should have a list of used RAM. Because
;		this JS tool prints out the number of bytes and the ending addresses (if more than 1 byte it spans), you then
;		need to remove either one or the other. I did this:
;			If you want just the number of bytes:
;				Find what: [/\$[a-zA-Z0-9]+$]
;				Replace with: []
;				Hit replace all
;			If you want the ending address:
;				Find what: [\t\d+/]
;				Replace with: [\t-]
;				Hit replace all
;		And it should be in a compatible format.
;		Note that if you do this back and fourth repeatedly, you'll start losing ranges at the lowest and highest of the list of
;		RAM address. This is because this only list gaps in between the lowest and highest range.
;		Also note that not all gaps are guaranteed are freeram, so editing is required.
;New stuff:
;	I drastically updated the javascript (JS) HTML file, enables the user to filters at their own discretion, and it also outputs the list
;	in plaintext (easy to copy by selecting it, CTRL+A, CTRL+C) in the same format the JS takes it, making handling much easier, the steps above
;	on to extract used addresses is now obsolete due to this update. Just search for empty RAM on smwc, list those into the JS tool, filter by
;	gaps only, and you now have SMW's used addresses.
;
;Here is the list I got. You can copy it and paste it into the JS tool.
;NOTE: This may be out of date as more discovery of how RAM is being used by SMW or tools, especially if LM updates and more RAM are being used.
$7E0000	-$7E0057	RAM used by SMW.
$7E0059	-$7E005B	RAM used by SMW.
$7E005D	-$7E005F	RAM used by SMW.
$7E0064	-$7E0078	RAM used by SMW.
$7E007A	-$7E007B	RAM used by SMW.
$7E007D	-$7E0086	RAM used by SMW.
$7E0088	-$7E00EF	RAM used by SMW.
7E00F0	-$7E00FF	RAM used by LM.
$7E0100	-$7E0694	RAM used by SMW.
$7E0695	100	Used by LM 1.70+ for VRAM modification.
$7E0701	-$7E0AF4	RAM used by SMW.
$7E0AF6	-$7E0D9B	RAM used by SMW.
$7E0D9D	-$7E0DA0	RAM used by SMW.
$7E0DA2	-$7E0DC2	RAM used by SMW.
$7E0DC7	-$7E0DD8	RAM used by SMW.
$7E0DDA	1	RAM used by SMW.
$7E0DDE	-$7E0F39	RAM used by SMW.
$7E0F40	-$7E0F41	RAM used by SMW.
$7E0F48	-$7E0F5D	RAM used by SMW.
$7E0F72	-$7E13C7	RAM used by SMW.
$7E13C9	-$7E13E5	RAM used by SMW.
$7E13E8	-$7E13F1	RAM used by SMW.
$7E13F3	-$7E1409	RAM used by SMW.
$7E140D	-$7E1414	RAM used by SMW.
$7E1417	-$7E142B	RAM used by SMW.
$7E142C	-$7E142F	RAM used by SMW. Note: if using “Center Scroll” with !Setting_CenterScroll_ScrollType set to 0, remove this.
$7E1430	-$7E1460	RAM used by SMW.
$7E1462	-$7E146B	RAM used by SMW.
$7E1470	-$7E1472	RAM used by SMW.
$7E1474	1	RAM used by SMW.
$7E1476	1	RAM used by SMW.
$7E1478	1	RAM used by SMW.
$7E147A	1	RAM used by SMW.
$7E147C	1	RAM used by SMW.
$7E147E	-$7E1486	RAM used by SMW.
$7E148B	-$7E14AB	RAM used by SMW.
$7E14AD	-$7E14BD	RAM used by SMW.
$7E14BF	-$7E14C0	RAM used by SMW.
$7E14C2	-$7E14C3	RAM used by SMW.
$7E14C5	-$7E14C6	RAM used by SMW.
$7E14C8	-$7E15E7	RAM used by SMW.
$7E15E9	-$7E1695	RAM used by SMW.
$7E1697	-$7E17BA	RAM used by SMW.
$7E17BC	-$7E1863	RAM used by SMW.
$7E1865	-$7E1868	RAM used by SMW.
$7E186B	-$7E1878	RAM used by SMW.
$7E187A	-$7E1889	RAM used by SMW.
$7E188B	-$7E188D	RAM used by SMW.
$7E188F	-$7E18A5	RAM used by SMW.
$7E18A7	-$7E18B3	RAM used by SMW.
$7E18B5	-$7E18B6	RAM used by SMW.
$7E18B8	-$7E18BA	RAM used by SMW.
$7E18BC	-$7E18C4	RAM used by SMW.
$7E18CD	-$7E18D7	RAM used by SMW.
$7E18D9	-$7E18DA	RAM used by SMW.
$7E18DC	-$7E18E5	RAM used by SMW.
$7E18E7	-$7E18F5	RAM used by SMW.
$7E18F7	-$7E1907	RAM used by SMW.
$7E1909	-$7E191A	RAM used by SMW.
$7E191C	-$7E191E	RAM used by SMW.
$7E1920	-$7E1922	RAM used by SMW.
$7E1925	1	RAM used by SMW.
$7E1928	1	RAM used by SMW.
$7E192A	-$7E192B	RAM used by SMW.
$7E192D	-$7E1B7E	RAM used by SMW.
$7E1B80	-$7E1B96	RAM used by SMW.
$7E1B99	-$7E1DEE	RAM used by SMW.
$7E1DF0	-$7E1DFC	RAM used by SMW.
$7E1DFF	1	RAM used by SMW.
$7E1E02	-$7E1F2A	RAM used by SMW.
$7E1F2E	-$7E1F3A	RAM used by SMW.
$7E1F3C	-$7E1F47	RAM used by SMW.
$7E1F49	-$7E1FF9	RAM used by SMW.
$7E1FFB	-$7E1FFE	RAM used by SMW.
$7E2000	-$7EACFF	RAM used by SMW. Note: Remove this if “Free up RAM $7E2000” is installed.
$7EAD00	-$7EB8FF	RAM used by SMW and LM's examination
$7EB900	-$7EBCFF	RAM used by SMW.
$7EBD00	-$7EC0FF	RAM used by SMW.
$7EC100	-$7EC67F	Originally empty, but LM use this for examination.
$7EC680	-$7EC6DF	RAM used by SMW.
$7EC6E0	-$7EC7FF	Empty, untouched RAM on an unhacked ROM. In a hacked ROM, it may be occupied by ExAnimation data (see $7E:C100).
$7EC800	-$7EFFFF	RAM used by SMW.
$7F0000	-$7F3FFF	RAM used by SMW. Note: Remove this if “Free $7F0000 (OW Event Restore)” is installed.
$7F4000	-$7F7FFF	RAM used by SMW.
$7F8000	-$7F8182	RAM used by SMW. Note: Remove this if “Free up RAM $7F:8000” is installed
$7F8183	-$7F837A	Empty, but partially taken by LM. Not sure the exact amount of bytes used though.
$7F837B	-$7F9C7A	RAM used by SMW.
$7F9C7B	-$7FC7FF	Empty, but partially used by other SMW tools.
$7FC800	-$7FFFFF	RAM used by SMW.